{
  "version": 3,
  "sources": ["../src/lib.ts"],
  "sourcesContent": ["import type {\n    ToastImportance,\n    ToastTypes,\n    ToastAnimations,\n    ToastColor,\n    ToastOptions,\n} from \".\";\n\nimport {\n    DEFAULT_ANIMATION,\n    DEFAULT_ANIMATION_DURATION,\n    DEFAULT_COLORS,\n    DEFAULT_DURATION,\n    DEFAULT_ICON_POSITION,\n    DEFAULT_TOAST_POSITION,\n} from \"./consts\";\n\n/**\n * ## Query Selector\n * A shorthand for:\n *\n * ```ts\n * document.querySelector(HTMLElement)\n * ```\n */\nexport const $ = document.querySelector.bind(\n    document,\n) as typeof document.querySelector;\n\n/**\n * ## Element Creator\n * A shorthand for:\n *\n * ```ts\n * document.createElement(HTMLElement)\n * ```\n */\nexport const $create = document.createElement.bind(\n    document,\n) as typeof document.createElement;\n\nexport const toast_container = document.getElementById(\"toast-container\");\nconst does_user_prefer_reduced_motion_query = window.matchMedia(\n    \"('prefers-reduced-motion')\",\n);\n\nexport let does_user_prefer_reduced_motion =\n    does_user_prefer_reduced_motion_query.matches;\n\ndoes_user_prefer_reduced_motion_query.addEventListener(\"change\", (e) => {\n    does_user_prefer_reduced_motion = e.matches;\n});\n\nconst MAX_ID_LENGTH = 16;\nconst MIN_ID_LENGTH = 6;\nconst alpha_numericals = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\n/**\n * ## gen_random_id()\n * Synchronously generates a random id using Math.random along a string of alphanumericals using a for loop.\n * If a Math.random() in an if statement is < 0.5, then this turns the current acquired character\n * to uppercase.\n */\nexport function gen_random_id(length: number = 8) {\n    if (length < MIN_ID_LENGTH) {\n        throw new Error(\n            \"Please provide a string length that's greater than \" +\n                MIN_ID_LENGTH,\n        );\n    } else if (length > MAX_ID_LENGTH) {\n        throw new Error(\n            \"Please provide a string length that's less than \" + MAX_ID_LENGTH,\n        );\n    }\n\n    let str = \"\";\n\n    for (let idx = 0; idx < length; ++idx) {\n        const random = Math.floor(\n            Math.random() * (alpha_numericals.length - 1),\n        );\n\n        if (Math.random() < 0.5) {\n            str += alpha_numericals[random].toUpperCase();\n        } else {\n            str += alpha_numericals[random];\n        }\n    }\n\n    return str;\n}\n\n/**\n *  ## get_icon()\n *\n *  A static icon generator to clean up the code a little bit.\n *  Uses document.createElement JS function and append() instead of innerHTML.\n *\n * Icons are from HeroIcons\n *\n *  @see https://heroicons.com/\n *\n */\nexport function get_icon(\n    type: ToastTypes | \"close\",\n): HTMLElement | SVGSVGElement {\n    if (type == \"loading\") {\n        const loader = document.createElement(\"div\");\n\n        loader.classList.add(\"spin\", \"toast-loading\");\n        loader.style.width = \"14px\";\n        loader.style.height = \"14px\";\n\n        return loader;\n    } else {\n        const svg = document.createElementNS(\n            \"http://www.w3.org/2000/svg\",\n            \"svg\",\n        );\n        const path = document.createElementNS(\n            \"http://www.w3.org/2000/svg\",\n            \"path\",\n        );\n\n        svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n        svg.setAttribute(\"fill\", \"none\");\n        svg.setAttribute(\"viewBox\", \"0 0 24 24\");\n        svg.setAttribute(\"stroke-width\", \"1.5\");\n        svg.setAttribute(\"stroke\", \"currentColor\");\n        svg.setAttribute(\"width\", \"16\");\n        svg.setAttribute(\"height\", \"16\");\n\n        path.setAttribute(\"stroke-linecap\", \"round\");\n        path.setAttribute(\"stroke-linejoin\", \"round\");\n\n        if (type == \"success\") {\n            path.setAttribute(\n                \"d\",\n                \"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\",\n            );\n        } else if (type == \"error\") {\n            path.setAttribute(\n                \"d\",\n                \"M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z\",\n            );\n        } else if (type == \"info\") {\n            path.setAttribute(\n                \"d\",\n                \"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\",\n            );\n        } else if (type == \"warn\") {\n            path.setAttribute(\n                \"d\",\n                \"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\",\n            );\n        } else if (type == \"close\") {\n            path.setAttribute(\"d\", \"M6 18L18 6M6 6l12 12\");\n        }\n\n        svg.append(path);\n\n        return svg;\n    }\n}\n\n/**\n * ## get_importance\n *\n * @param type {ToastTypes}\n * @returns A mapped value of aria-live attribute value. Namely:\n *\n * - \"not important\" == \"off\"\n * - \"important\" == \"polite\"\n * - \"critical\" == \"assertive\"\n */\nexport function get_importance(type: ToastTypes): ToastImportance {\n    let importance: ToastImportance;\n\n    if (type == \"error\" || type == \"success\" || type == \"warn\") {\n        importance = \"critical\";\n    } else if (type == \"loading\" || type == \"neutral\") {\n        importance = \"not important\";\n    } else {\n        importance = \"important\";\n    }\n\n    return importance;\n}\n\nexport function init(\n    options?: Partial<ToastOptions>,\n    type: ToastTypes = \"neutral\",\n) {\n    let toast_container_provided_duration: number;\n\n    if (toast_container) {\n        toast_container_provided_duration =\n            +toast_container.getAttribute(\"data-duration\")!;\n    } else {\n        toast_container_provided_duration = +$(\"#toast-container\")!;\n    }\n\n    let enter_animation_duration: number;\n    let exit_animation_duration: number;\n    let duration: number;\n    let toast_id: string;\n    let importance: ToastImportance;\n    let color: ToastColor;\n    let animation: ToastAnimations;\n\n    if (options) {\n        duration =\n            options?.duration ||\n            toast_container_provided_duration ||\n            DEFAULT_DURATION;\n        toast_id = options?.toast_id || gen_random_id();\n        enter_animation_duration =\n            options?.animation_duration?.in || DEFAULT_ANIMATION_DURATION;\n        exit_animation_duration =\n            options?.animation_duration?.out || DEFAULT_ANIMATION_DURATION;\n        color = options?.colors || DEFAULT_COLORS;\n        importance = options?.importance || get_importance(type);\n        animation = options?.animation || DEFAULT_ANIMATION;\n    } else {\n        duration = toast_container_provided_duration || DEFAULT_DURATION;\n        toast_id = gen_random_id();\n        enter_animation_duration = DEFAULT_ANIMATION_DURATION;\n        exit_animation_duration = DEFAULT_ANIMATION_DURATION;\n        color = DEFAULT_COLORS;\n        importance = get_importance(type);\n        animation = DEFAULT_ANIMATION;\n    }\n\n    return {\n        animation_duration: {\n            in: enter_animation_duration,\n            out: exit_animation_duration,\n        },\n        duration,\n        toast_id,\n        icon_position: options?.icon_position || DEFAULT_ICON_POSITION,\n        toast_position: options?.toast_position || DEFAULT_TOAST_POSITION,\n        importance,\n        colors: color,\n        animation,\n        automatically_close: options?.automatically_close ?? true,\n    };\n}\n\n/**\n * ## dom_reflow()\n * Reflow the given element to reset its animation state.\n */\nexport function dom_reflow(element: HTMLElement) {\n    const className = element.className;\n\n    element.className = \"\";\n    element.offsetWidth;\n    element.className = className;\n}\n\nexport function append_custom_icon_to_element(\n    element: HTMLElement,\n    custom_icon: string | HTMLElement | SVGElement,\n) {\n    if (typeof custom_icon == \"string\") {\n        element.innerHTML = custom_icon;\n    } else if (\n        custom_icon instanceof HTMLElement ||\n        custom_icon instanceof SVGElement\n    ) {\n        element.append(custom_icon);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
